<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<object name="Core" page="Core" parent="Object" type="gideros" version="Gideros 2012.2"><![CDATA[Gideros Core functions]]>
  <platform>mac</platform>
  <platform>pc</platform>
  <method name="Core.class" page="class" shortdesc="Creates and returns new Gideros class" version="Gideros 2012.2"><![CDATA[Creates and returns new Gideros class]]>
    <parameter name="base" optional="true" type="GiderosClass"><![CDATA[Gideros class from which to inherit]]></parameter>
  </method>
  <method name="Core.asyncCall" page="asyncCall" shortdesc="Launch function on separate thread as background task" version="Gideros 2016.06"><![CDATA[Launch function on separate thread as background task.

Background threads are only executed when main thread is not running]]>
    <parameter name="task" optional="false" type="function"><![CDATA[function to run in background]]></parameter>
    <parameter name="parameters" optional="true" type="multiple"><![CDATA[multiple parameters to pass to function]]></parameter>
  </method>
  <method name="Core.yield" page="yield" shortdesc="Yield function running as background task" version="Gideros 2016.06"><![CDATA[Yield function running as background task.

Core.yield([number of seconds to wait])
Core.yield(true) -- yield for a single frame and disable auto yield
 Core.yield(false) -- don't yield now, but reenable autoyield]]>
    <parameter name="state" optional="false" type="number or boolean"><![CDATA[number of seconds to yield or boolean to enable/disable auto yield]]></parameter>
  </method>
  <method name="Core.frameStatistics" page="frameStatistics" shortdesc="Return table with data about frame" version="Gideros 2016.08"><![CDATA[Returns table with fields: 
*meanFrameTime* - the average duration of a frame (useful to get current fps), 
*meanFreeTime* - the average free cpu time in a frame
*frameCounter* - frame's number]]>
    <return type="table"><![CDATA[table with data]]></return>
  </method>
  <method name="Core.profilerStart" page="profilerStart" shortdesc="Start profiling lua code" version="Gideros 2017.8">
  <![CDATA[Start recording of time spent in each lua function]]>
  </method>
  <method name="Core.profilerStop" page="profilerStop" shortdesc="Stop profiling" version="Gideros 2017.8">
  <![CDATA[Stop collecting profiling data]]>
  </method>
  <method name="Core.profilerReset" page="profilerReset" shortdesc="Clear recorded profiling data" version="Gideros 2017.8">
  <![CDATA[Drop currently recorded data and reset profiler for a clean subsequent start]]>
  </method>
  <method name="Core.profilerReport" page="profilerReport" shortdesc="Output profiling results" version="Gideros 2017.8">
  <![CDATA[Returns an associative array of tables describing CPU usage of lua functions. Each table in the array is indexed by an unique function id and has the following content: 
*name* - Name of the function 
*time* - Total time spent in the function (seconds)
*count* - Number of times this function was called
*callers* - A table containing the same information has above for each function which called this one]]>
    <return type="table"><![CDATA[table with profiling data]]></return>
  </method>
  <example name=""><![CDATA[MySprite = Core.class(Sprite)
--my custom sprite class
function MySprite:init()
end]]></example>
</object>
