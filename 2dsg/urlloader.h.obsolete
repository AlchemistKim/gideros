#ifndef URLLOADER_H_INC
#define URLLOADER_H_INC

#include "eventdispatcher.h"
#include <vector>

struct URLVariables;

class URLLoader : public EventDispatcher
{
public:
	URLLoader(const char* url = NULL, const URLVariables* variables = NULL);	// can throw GiderosException
	virtual ~URLLoader();
	void load(const char* url, const URLVariables* variables = NULL);			// can throw GiderosException
	void close();

	void setCallback(void (*callback)(void*, void*), void* data1, void* data2);

	std::vector<char> data;

private:
	static void s_callback(int, int, void*, size_t, void*);
	static void s_progress(int, size_t, size_t, void*);
	void callback(int, int, void*, size_t);
	void progress(int, size_t, size_t);

	void (*callback_)(void*, void*);
	void* data1_;
	void* data2_;

	int current_;
};

#endif
