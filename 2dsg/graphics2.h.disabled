#ifndef GRAPHICS2_H
#define GRAPHICS2_H

#include "platform.h"
#include "point.h"
#include <vector>

//class GraphicsItem2;
#include "graphicsbase.h"

class Graphics2
{
public:
	Graphics2();
	~Graphics2();

	void beginFill(float r, float g, float b, float a = 1.f) {}
	void beginFill(unsigned int color, float alpha = 1.f);
	void endFill();

	void lineStyle(float thickness, float r, float g, float b, float a = 1.f) {}
	void lineStyle(float thickness = F_NAN, unsigned int color = 0, float alpha = 1.f);

	void moveTo(float x, float y);
	void lineTo(float x, float y);

	void drawRect(float x, float y, float width, float height) {}

	void clear();

	void draw();

private:
	void endLineStrip();
	void extendBounds(float x, float y, float thickness = 0.f);

private:
	friend class Sprite;

	void bounds(Point2f* min, Point2f* max) const;

	float liner_, lineg_, lineb_, linea_;
	float thickness_;
	std::vector<Point2f> lineStrip_;

	std::vector<std::vector<Point2f> > contours_;
	bool fill_;
	float fillr_, fillg_, fillb_, filla_;

	float penx_, peny_;

	//std::vector<GraphicsItem2*> items_;
	//std::vector<GraphicsItem2*> lineItems_;

	std::vector<GraphicsBase*> items_;
	std::vector<GraphicsBase*> lineItems_;

	Point2f min_, max_;
};

#endif