#ifndef TOUCHQUEUE_H
#define TOUCHQUEUE_H

#include <vector>
#include <queue>

struct TouchQueueElement
{
public:
	TouchQueueElement(int level, int capacity, int type, int size, int* id, int* x, int* y, int actionIndex);
	~TouchQueueElement();
	void copy(int type, int size, int* id, int* x, int* y, int actionIndex);

	int level;
	int capacity;
	int type;
	int size;
	int* id;
	int* x;
	int* y;
	int actionIndex;

private:
	TouchQueueElement(const TouchQueueElement&);
	TouchQueueElement& operator=(TouchQueueElement&);
};

class TouchQueue
{
public:
	TouchQueue() {}
	~TouchQueue();

	void push(int type, int size, int* id, int* x, int* y, int actionIndex);
	TouchQueueElement* front() const;
	void pop();
	bool empty() const;

private:
	std::deque<TouchQueueElement*> queue;
	std::vector<TouchQueueElement*> cache[9];
};

#endif // TOUCHQUEUE_H
