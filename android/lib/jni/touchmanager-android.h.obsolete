#ifndef TOUCHMANAGER_ANDROID_H
#define TOUCHMANAGER_ANDROID_H

#include <touch.h>
#include <map>
#include <set>
#include <vector>
#include <stack>

class TouchManager
{
public:
	TouchManager();
	~TouchManager();

	void touchesBegin(	int size,
						int* id, int* x, int *y,
						int actionIndex,
						std::vector<Touch*>* touches,
						std::vector<Touch*>* allTouches);

	void touchesMove(	int size,
						int* id, int* x, int *y,
						std::vector<Touch*>* touches,
						std::vector<Touch*>* allTouches);

	void touchesEnd(	int size,
						int* id, int* x, int *y,
						int actionIndex,
						std::vector<Touch*>* touches,
						std::vector<Touch*>* allTouches);

	void touchesCancel(	int size,
						int* id, int* x, int *y,
						std::vector<Touch*>* touches,
						std::vector<Touch*>* allTouches);

private:
	Touch* newTouch();
	void deleteTouch(Touch* touch);
	

private:
	std::map<int, Touch*> touchMap_;
	std::map<int, Touch*> touchPool_;
	int nextid_;
	std::vector<Touch*> deleteList_;
};


#endif
