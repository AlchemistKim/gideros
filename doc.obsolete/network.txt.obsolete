Class: URLLoader

The `URLLoader` class is used to download data from an URL. It can be used
to download (and optionally save) text files, XML files, JSON files, image files or binary files, etc.
Downloaded data is stored at `URLLoader` instance's `data` field as string. Lua is eight-bit clean and so strings
may contain characters with any numeric value, including embedded zeros. That means that you can store
any binary data into a string.

### URLLoader Events

* Event.COMPLETE = "complete"
* Event.PROGRESS = "progress"
* Event.ERROR = "error"

### URLLoader Fields

* URLLoader.GET = "get"
* URLLoader.POST = "post"

Example:
The example below shows downloading an image file from an URL, saving it to the documents folder and displaying it
on the stage. This example also shows downloading progress and handling errors.

	local loader = URLLoader.new("http://example.com/image.png")

	local function onComplete()
		local out = io.open("|D|image.png", "wb")
		out:write(loader.data)
		out:close()

		local b = Bitmap.new(Texture.new("|D|image.png"))
		stage:addChild(b)
	end

	local function onError()
		print("error")
	end

	local function onProgress(event)
		print("progress: " .. event.bytesLoaded .. " of " .. event.bytesTotal)
	end

	loader:addEventListener(Event.COMPLETE, onComplete)
	loader:addEventListener(Event.IO_ERROR, onError)
	loader:addEventListener(Event.PROGRESS, onProgress)


---------------------------------------

Function: URLLoader.new

Creates a new `URLLoader` object.

`url` parameter specifies the URL to download. This parameter is optional and if specified loading starts immediately.

`variables` parameter is an optional table and contains the HTTP form submission method (GET or POST) and the data submitted.
If  specified, it should contain `method` and `data` fields. `method` field specifies the HTTP form submission method and can be one of the `URLLoader.GET` or 
`URLLoader.POST` values. If the submission method is GET, `data` field should be a table and should contain key/value pairs. If the submission method is POST,
`data` field should be a string and should contain the data that is submitted through POST method.

After loading is finished, loaded data is stored at `data` field of this instance.

Parameters:
url - (string, optional) URL to download. This parameter is optional and if specified loading starts immediately.
variables - (table, optional) This parameter contains the HTTP form submission method (GET or POST) and the data submitted.

Example:

	local url = "http://www.[yourDomain].com/application.php"

	local loader1 = URLLoader.new(url);
	local loader2 = URLLoader.new(url, {method=URLLoader.GET, data={userid="gideros", login="guest"}});
	local loader3 = URLLoader.new(url, {method=URLLoader.POST, data="userid=gideros&login=guest"});

---------------------------------------

Function: URLLoader:load

Loads data from the specified URL. After loading is finished, loaded data is stored at `data` field of this instance.
Please refer to [[URLLoader.new]] for more detailed description of `url` and `variables` parameters.

Parameters:
url - (string) URL to download.
variables - (table, optional) This parameter contains the HTTP form submission method (GET or POST) and the data submitted.

---------------------------------------

Function: URLLoader:close

Terminates the current loading operation.

