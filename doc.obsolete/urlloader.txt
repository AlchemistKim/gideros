Class: UrlLoader

The `UrlLoader` class is used to download data from an URL. It can be used
to download (and optionally save) text files, XML files, JSON files, image files or binary files, etc.
Downloaded data is delivered at `event.data` field of `Event.COMPLETE` event as string. Lua is eight-bit clean and so strings
may contain characters with any numeric value, including embedded zeros. That means that you can store
any binary data into a string.

### UrlLoader Events

The `UrlLoader` class dispatches the events `Event.COMPLETE`, `Event.PROGRESS` and `Event.ERROR`.

#### Event.COMPLETE

This event is dispatched when loading is complete.

* **event.data:** The downloaded data.

#### Event.PROGRESS

This event is dispatched as the notification of how far the download has progressed. 

* **event.bytesLoaded:** The number of bytes loaded.
* **event.bytesTotal:** The total number of bytes that will be loaded or -1 if the length can't be determined.

#### Event.ERROR

This event is dispatched when `UrlLoader` fails and terminates the download.

### HTTP Request Methods

UrlLoader supports GET, POST, PUT and DELETE methods. These are defined by these string constants:

* **UrlLoader.GET = "get"**
* **UrlLoader.POST = "post"**
* **UrlLoader.PUT = "put"**
* **UrlLoader.DELETE = "delete"**

Example:
The example below shows downloading an image file from an URL, saving it to the documents folder and displaying it
on the stage. This example also shows downloading progress and handling errors.

	local loader = UrlLoader.new("http://example.com/image.png")

	local function onComplete(event)
		local out = io.open("|D|image.png", "wb")
		out:write(event.data)
		out:close()

		local b = Bitmap.new(Texture.new("|D|image.png"))
		stage:addChild(b)
	end

	local function onError()
		print("error")
	end

	local function onProgress(event)
		print("progress: " .. event.bytesLoaded .. " of " .. event.bytesTotal)
	end

	loader:addEventListener(Event.COMPLETE, onComplete)
	loader:addEventListener(Event.ERROR, onError)
	loader:addEventListener(Event.PROGRESS, onProgress)
	
---------------------------------------

Function: UrlLoader.new

Creates a new `UrlLoader` object.

`url` parameter specifies the URL to download. This parameter is optional and if specified loading starts immediately.

`method` parameter specifies the HTTP request method. It can be one of the values of `UrlLoader.GET`, `UrlLoader.POST`, `UrlLoader.PUT` or `UrlLoader.DELETE`.
The default HTTP method is `UrlLoader.GET`.

`body` parameter specifies the HTTP body data. This parameter is used only when the HTTP method is `UrlLoader.POST` or or `UrlLoader.PUT`.

After loading is finished, loaded data is stored at `event.data` field of `Event.COMPLETE` event as string.

Parameters:
url - (string, optional) URL to download. This parameter is optional and if specified loading starts immediately.
method - (string, default = "get") HTTP request method.
headers - (table, optional) HTTP headers.
body - (string, optional) HTTP body data. This data is sent as the message body of a request.

Example:

	local url = "http://www.[yourDomain].com/application.php?userid=gideros&login=guest"

	local loader1 = UrlLoader.new(url)
	local loader2 = UrlLoader.new(url, UrlLoader.GET) -- same as the previous line
	local loader3 = UrlLoader.new(url, UrlLoader.POST, "my post data")
	local loader4 = UrlLoader.new(url, UrlLoader.PUT, "my put data")
	local loader5 = UrlLoader.new(url, UrlLoader.DELETE)
	
	local headers = {
		["Content-Type"] = "application/x-www-form-urlencoded",
		["User-Agent"] = "Gideros Browser",
	}
	local loader6 = UrlLoader.new(url, UrlLoader.PUT, headers, "key=value")
	
---------------------------------------

Function: UrlLoader:load

Loads data from the specified URL. If there is any load operation in progress, it is terminated and new progress starts.
Please refer to [[UrlLoader.new]] for more detailed description of `url`, `method` and `body` parameters.

Parameters:
url - (string, optional) URL to download. This parameter is optional and if specified loading starts immediately.
method - (string, default = "get") HTTP request method.
headers - (table, optional) HTTP headers.
body - (string, optional) HTTP body data. This data is sent as the message body of a request.

---------------------------------------

Function: UrlLoader:close

Terminates the current loading operation.
