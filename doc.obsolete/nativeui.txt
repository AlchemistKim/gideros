Class: AlertDialog

The `AlertDialog` class is used to display native alert dialogs with one, two or three buttons. Cancel button
is mandatory but other two buttons are optional. When the user presses any button in the alert dialog,
it's dismissed and 'Event.COMPLETE' event is dispatched:

* `event.buttonIndex`: the index of the button pressed. It is `nil` when cancel button is pressed, 1 when 1st button is pressed and 2 when 2nd button is pressed.
* `event.buttonText`: the text of the button pressed

If alert dialog is dismissed by any other means (by pressing back button on Android or by pressing close button on desktop), 
it behaves as cancel button is pressed.

Example:
	local alertDialog = AlertDialog.new("This is my title", "And my message", "Cancel", "Yes", "No")
	
	local function onComplete(event)
		print(event.buttonIndex, event.buttonText)
	end
	
	alertDialog:addEventListener(Event.COMPLETE, onComplete)
	alertDialog:show()

---------------------------------------

Function: AlertDialog.new

Creates a new `AlertDialog` object.
 
Parameters:
	title - (string) The string that appears in the receiver's title bar. Can be empty string.
	message - (string) Descriptive text that provides more details than the title. Can be empty string.
	cancelButton - (string) The text of the cancel button.
	button1 - (string, optional) The text of the 1st optional button.
	button2 - (string, optional) The text of the 2st optional button.
	
---------------------------------------

Function: AlertDialog:show

Shows the alert dialog.

---------------------------------------

Function: AlertDialog:hide

Hides the alert dialog.

---------------------------------------

Class: TextInputDialog

The `TextInputDialog` class is used to display native text input dialogs with one text edit field, one button (as cancel button)
and two optional buttons. When the user presses any buttons in the alert dialog, it's dismissed and 'Event.COMPLETE' event is dispatched:

* `event.text`: the text entered into text input field
* `event.buttonIndex`: the index of the button pressed. It is `nil` when cancel button is pressed, 1 when 1st button is pressed and 2 when 2nd button is pressed.
* `event.buttonText`: the text of the button pressed

If text input dialog is dismissed by any other means (by pressing back button on Android or by pressing close button on desktop), 
it behaves as cancel button is pressed.

Example:
	local textInputDialog = TextInputDialog.new("my title", "my message", "some text", "Cancel", "OK")
	
	local function onComplete(event)
		print(event.text, event.buttonIndex, event.buttonText)
	end
	
	textInputDialog:addEventListener(Event.COMPLETE, onComplete)
	textInputDialog:show()


---------------------------------------

Function: TextInputDialog.new

Creates a new `TextInputDialog` object.
 
Parameters:
	title - (string) The string that appears in the receiver’s title bar.
	message - (string) Descriptive text that provides more details than the title.
	text - (string) The text on the text field.
	cancelButton - (string) The text of the cancel button.
	button1 - (string, optional) The text of the 1st optional button.
	button2 - (string, optional) The text of the 2st optional button.
	
---------------------------------------

Function: TextInputDialog:setText

Sets the text on the text field.

Parameters:
	text - (string) The text on the text field.

---------------------------------------

Function: TextInputDialog:getText

Returns the text on the text field.

Returns:
The text on the text field.

---------------------------------------

Function: TextInputDialog:setInputType

Sets the input (keyboard) type associated with the text field. The options are:

* `TextInputDialog.TEXT`: Default keyboard type
* `TextInputDialog.NUMBER`: Numeric keypad
* `TextInputDialog.PHONE`: Keypad designed for entering telephone numbers
* `TextInputDialog.EMAIL`: Keyboard optimized for specifying email addresses
* `TextInputDialog.URL`: Keyboard optimized for URL entry

Parameters:
	type - (string) Tnput type associated with the text field.

---------------------------------------

Function: TextInputDialog:getInputType

Returns the keyboard type associated with the text field.

Returns:
The keyboard type associated with the text field.

---------------------------------------

Function: TextInputDialog:setSecureInput

Sets whether the text object should hide the text being entered.

Parameters:
	secureInput - (boolean) If 'true', the text object hides the text being entered.

---------------------------------------

Function: TextInputDialog:isSecureInput

Returns whether the text object hides the text being entered.

Returns:
Whether the text object hides the text being entered.

---------------------------------------
