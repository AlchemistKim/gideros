Class: Timer

The `Timer` class is used to execute a code at specified intervals. The listener functions are registered
through `Event.TIMER` and `Event.TIMER_COMPLETE` events.


### Timer Events
* Event.TIMER = "timer"
* Event.TIMER_COMPLETE = "timerComplete"

Category: Utils

---------------------------------------

Function: Timer.new

Creates a new `Timer` object with the specified delay and repeatCount states.

Parameters:
	delay - The time interval between timer events in milliseconds.
	repeatCount - (default = 0) The number of repetitions. A value of 0 runs the timer infinitely. If nonzero, the timer runs the specified number of times and then stops.

---------------------------------------

Function: Timer:start

Starts the timer.

---------------------------------------

Function: Timer:stop

Stops the timer. This function doesn't change the `currentCount` property.

---------------------------------------

Function: Timer:reset

Stops the timer and sets the `currentCount` property to 0.

---------------------------------------

Function: Timer:getDelay

Returns the time interval between timer events in milliseconds.

Returns:
The time interval between timer events in milliseconds.

---------------------------------------

Function: Timer:getCurrentCount

Returns the current trigger count of the timer. It starts with 0 and if it reaches `repeatCount` value, timer stops.

Returns:
The current trigger count.

---------------------------------------

Function: Timer:getRepeatCount

Returns the number of repetitions the timer will make. A value of 0 means the timer runs infinitely. If nonzero, the timer runs the specified number of times and then stops.

Returns:
The number of repetitions.


---------------------------------------

Function: Timer:isRunning

Returns the current running status of timer.

Returns:
`true` if the timer is running, `false` otherwise.


---------------------------------------

Function: Timer:setDelay

Sets the time interval between timer events in milliseconds.

Parameters:
	delay - (number) The time interval between timer events in milliseconds.



---------------------------------------

Function: Timer:setRepeatCount

Sets the number of repetitions the timer will make. A value of 0 means the timer runs infinitely. If nonzero, the timer runs the specified number of times and then stops.

Parameters:
	repeatCount - (number) the number of repetitions the timer will make

---------------------------------------

Function: Timer.delayedCall

Provides a simple way to call a function after a set amount of time. This function returns the
`Timer` object created inside.

Parameters:
	delay - (number) Delay in miliseconds before the function is called
	func - (function) Function to call
	data - (optional) An optional data parameter that is passed as a first argument to the function

Returns:
The `Timer` object

---------------------------------------

Function: Timer.pauseAllTimers (obsolete)

**This function is obsolete. Use [[Timer.pauseAll]] instead.**

Pause all timers. Suitable for temporarily pausing all timers when application is paused.

---------------------------------------

Function: Timer.resumeAllTimers (obsolete)

**This function is obsolete. Use [[Timer.resumeAll]] instead.**

Resume all timers.

---------------------------------------

Function: Timer.pauseAll

Pause all timers. Suitable for temporarily pausing all timers when application is paused.

---------------------------------------

Function: Timer.resumeAll

Resume all timers.

---------------------------------------

Function: Timer.stopAll

Stop all timers.
