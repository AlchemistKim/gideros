Class: Facebook > EventDispatcher

Facebook SDK plugin is available for only iOS as an external plugin. To use facebook module:

1. Download and install Facebook SDK from https://developers.facebook.com/ios/downloads/
2. Add FacebookSDK.framework to your project.
3. Add the backward compatibility headers as described https://developers.facebook.com/docs/howtos/feed-dialog-using-ios-sdk/#step2
4. Add {Gideros Installation Directory}/All Plugins/Facebook/source/iOS/* files to your Xcode project.
5. If enabled, disable "Application does not run in background" property in .plist file.

The `Facebook` class is defined in module "facebook". Therefore, you need to call
`require("facebook")` before using it. Loading the Facebook module 
also creates a global variable `facebook` of type `Facebook` for direct use. 

### Facebook Events

The `Facebook` class dispatches the following events:

#### Event.LOGIN_COMPLETE
Dispatched when the user has logged in with Facebook.

#### Event.LOGIN_ERROR
Dispatched when Facebook login fails.

#### Event.LOGIN_CANCEL
Dispatched when the user cancelled Facebook login.

#### Event.LOGOUT_COMPLETE
Dispatched when the user has logged out with Facebook.

#### Event.DIALOG_COMPLETE
Dispatched when a Facebook dialog has finished.

#### Event.DIALOG_ERROR
Dispatched when a Facebook dialog has failed. `event.errorCode` and `event.errorDescription` fields give detailed information about the fail reason.

#### Event.DIALOG_CANCEL
Dispatched when a Facebook dialog is cancelled.

#### Event.REQUEST_COMPLETE
Dispatched when a Facebook graph request returns a response. `event.response` field contains the raw response of the completed Facebook graph request.

#### Event.REQUEST_ERROR
Dispatched when a Facebook graph request has failed. `event.errorCode` and `event.errorDescription` fields give detailed information about the fail reason.

---------------------------------------

Function: Facebook:setAppId

Initializes the Facebook library and sets App ID. This function should be called first before other functions.

Parameters:
	appId - (string) The Facebook application id.

---------------------------------------

Function: Facebook:authorize

Starts the authorization flow for the user with the requested permissions.

Parameters:
	permissions - (table, optional) An array of the requested permissions.

---------------------------------------

Function: Facebook:logout

Invalidates the current user session. This method does not unauthorized the application, it simply invalidates the access token. The user can unauthorized the application through the app settings page on the Facebook website.

---------------------------------------

Function: Facebook:isSessionValid

Checks if the access token is available and has not expired.

Returns:
`true` if the access token is valid, `false` otherwise.

---------------------------------------

Function: Facebook:dialog

Generate a UI dialog for the desired action.

Parameters:
	action - (string) The type of dialog to call. Currently supported methods are oauth, feed, and apprequests.
	paramaters - (table, optional) Table representing parameters specific to a particular dialog.
	
---------------------------------------

Function: Facebook:graphRequest

Makes a request to the Graph API.

Parameters:
	graphPath - (string) The path to the Graph API endpoint. For example, to fetch data about the currently logged in user this parameter should be ''me'', representing a call to the https://graph.facebook.com/me endpoint.
	paramaters - (table, optional) Table representing the API call parameters.
	method - (string, optional) HTTP method.

---------------------------------------

Function: Facebook:setAccessToken

Sets the access token.

Parameters:
	accessToken - (string)

---------------------------------------

Function: Facebook:getAccessToken

Returns the access token.

Returns: 
The access token.

---------------------------------------

Function: Facebook:setExpirationDate

Sets the expiration date.

Parameters:
	expirationDate - (string)

---------------------------------------

Function: Facebook:getExpirationDate

Returns the expiration date;

Returns:
The expiration date if it's set, `nil` otherwise.

---------------------------------------

Function: Facebook:extendAccessToken

Extends the access token. 

---------------------------------------

Function: Facebook:extendAccessTokenIfNeeded

Attempts to extend the access token. The access token expires after a certain amount of time and when you call this method it will be refreshed if it is still active and only after some time has passed since the last refresh. To ensure that you keep the access token fresh for active users, call this method in your `Application.RESUME` event.

---------------------------------------

Function: Facebook:shouldExtendAccessToken

Returns if the access token should be extended.

Returns:
`true` if the access token should be extended, `false` otherwise.

---------------------------------------
