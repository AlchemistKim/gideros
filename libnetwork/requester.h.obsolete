#ifndef REQUESTER_H
#define REQUESTER_H

#include <utility>
#include <string>
#include <vector>

// http://uriparser.sourceforge.net/

struct URLVariables
{
	enum Method
	{
		eGet,
		ePost,
	};

	Method method;
	std::vector<std::pair<std::string, std::string> > get;
	std::vector<char> post;
};

typedef void(*req_callback_type)(int, int, void*, size_t, void*); // id, error, ptr, size, callbackdata
typedef void(*req_progress_callback_type)(int, size_t, size_t, void*); // id, bytesLoaded, bytesTotal, callbackdata

void req_init();		// should be called once at the begining
void req_cleanup();		// should be called last
int req_load(const char* url,
			 req_callback_type callback,
			 req_progress_callback_type progresscallback,
			 void* callbackdata,
			 const URLVariables* variables = NULL);
void req_tick();
void req_close(int id);
void req_delete(int id);
void req_deleteall();

#endif
