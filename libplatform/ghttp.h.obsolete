#ifndef GHTTP_H
#define GHTTP_H

#include <stdlib.h>

#ifdef __cplusplus
extern "C" {
#endif

#define GHTTP_RESPONSE 0
#define GHTTP_ERROR 1
#define GHTTP_PROGRESS 2

typedef struct ghttp_Header {
    const char *name;
    const char *value;
} ghttp_Header;

typedef struct ghttp_Response
{
    void *data;
    size_t size;
} ghttp_Response;

typedef struct ghttp_Error
{
} ghttp_Error;

typedef struct ghttp_Progress
{
    size_t bytesLoaded;
    size_t bytesTotal;
} ghttp_Progress;

typedef void(*ghttp_Callback)(int id, int type, void *data, void *udata);

void ghttp_init();
void ghttp_cleanup();
void ghttp_tick();

int ghttp_get(const char *url, const ghttp_Header *headers, ghttp_Callback callback, void *udata);
int ghttp_post(const char *url, const ghttp_Header *headers, const void *data, size_t size, ghttp_Callback callback, void *udata);
int ghttp_delete(const char *url, const ghttp_Header *headers, ghttp_Callback callback, void *udata);
int ghttp_put(const char *url, const ghttp_Header *headers, const void *data, size_t size, ghttp_Callback callback, void *udata);
void ghttp_close(int);
void ghttp_closeAll();

#ifdef __cplusplus
}
#endif

#endif
